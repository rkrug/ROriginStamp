% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_timestamp.R
\name{create_timestamp}
\alias{create_timestamp}
\title{Create a timestamp for a for an R object or file.}
\usage{
create_timestamp(
  x,
  error_on_fail = TRUE,
  comment = "test",
  notifications = data.frame(currency = 0, notification_type = 0, target =
    "originstamp@trashmail.com"),
  url = api_url(),
  key = api_key()
)
}
\arguments{
\item{x}{an R object of which a hash will be calculated using the function \code{hash(x)}. The resulting hash will be submitted to OriginStamp.}

\item{error_on_fail}{if \code{TRUE}, raise error when api call fails, otherwise return the failed response.}

\item{comment}{a comment for the new timestamp}

\item{notifications}{notification settings}

\item{url}{the url of the api. The default is to use the url as returned by the function \code{api_url()}}

\item{key}{the api key. The default is to use the key as returned by the function \code{api_key()}}
}
\value{
object of type \code{OriginStampResponse}
}
\description{
Submit a hash of x to obtain a Trusted Time Stamp for that hash
wrapper around \url{https://doc.originstamp.org/#!/default/post_hash_string}
}
\details{
The behavior depends on the class of the argument \code{x}:
\itemize{
\item \strong{an object of class \code{hash} as returned by the package openssl}: the hash is submitted to OriginStamp
\item \strong{\code{character} vector of length 1 containing the name of an existing file}: the hash of the file is
calculated and submitted to OriginStamp
\item \strong{any other R object}: the hash is calculated using the function \code{hash()} and submitted to OriginStamp
}
}
\examples{

\dontrun{
# create timestamp
create_timestamp(
  x = letters
)
}
}
